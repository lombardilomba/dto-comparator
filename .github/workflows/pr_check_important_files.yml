name: Detect critical annotations in modified Java classes

on:
  pull_request:

jobs:
  check-critical-annotations:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect critical annotations
        id: annotations
        run: |
          git fetch origin ${{ github.base_ref }}
          files=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep '\.java$' || true)

          message=""
          found_annotation=false

          for file in $files; do
            if grep -q '@DtoObserver' "$file"; then
              echo "::warning file=$file::[‚ö†Ô∏è Critical] This class contains @DtoObserver. Review its impact on the flow."
              message+="üö® File $file contains @DtoObserver\n"
              found_annotation=true
            fi
          done

          if [ "$found_annotation" = true ]; then
            message+="\n‚ö†Ô∏è Attention: One or more files contain @DtoObserver. Please check for data flow impacts.\n"
          fi

          echo "message<<EOF" >> $GITHUB_OUTPUT
          echo -e "$message" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment on PR if critical annotation found
        if: steps.annotations.outputs.message != ''
        uses: actions/github-script@v7
        with:
          script: |
            const msg = [
              '### ‚ö†Ô∏è Critical annotations detected:',
              '',
              process.env.MESSAGE
            ].join('\n');

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: msg
            });
        env:
          MESSAGE: ${{ steps.annotations.outputs.message }}
